<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-08-15T20:15:20+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">tamakoshi2001’s blog</title><subtitle>tamakoshi2001&apos;s blog for GSoC 2023</subtitle><entry><title type="html">Sixth post</title><link href="http://localhost:4000/2023/08/14/sixth-post.html" rel="alternate" type="text/html" title="Sixth post" /><published>2023-08-14T00:00:00+09:00</published><updated>2023-08-14T00:00:00+09:00</updated><id>http://localhost:4000/2023/08/14/sixth%20post</id><content type="html" xml:base="http://localhost:4000/2023/08/14/sixth-post.html"><![CDATA[<h1 id="making-animation-functions-useful">Making animation functions useful</h1>

<h2 id="merging-plot-functions-and-animation-functions">merging plot functions and animation functions</h2>
<p>First, I integrated the plot functions and animation functions. Two weeks ago, I introduced them to you all. Actually, the code for them was almost identical to that of plot_functions. The reason for this was that we couldn’t call and use plot_functions within animation functions for the sake of speed and ease of use. However, repeatedly using the same code makes maintenance difficult. Therefore, in the current implementation, the behavior of functions changes depending on whether they receive a Qobj or a list of Qobjs. For instance, it goes like this:</p>

<p><img width="700" alt="matrix_histogram" src="https://github.com/qutip/qutip-tutorials/assets/72233550/e9cd3d38-8d31-45a3-ac0b-94409ff78bf2" /></p>

<div><video controls="" src="https://github.com/qutip/qutip-tutorials/assets/72233550/39d7b115-ad02-4dfc-a300-0cf74ca67912" muted="false"></video></div>

<p>However, there’s a feedback that this makes users to hard to find the animation feature. I plan to recreate the animation functions, and by calling the plot functions internally, even though plot functions will create an animation, the user can use plot functions when they want to make a plot and the other one for animations. This has the advantage of being more intuitive for the user.</p>

<h2 id="writing-a-tutorial-notebook">writing a tutorial notebook</h2>
<p>Currently, I am creating a tutorial notebook. There are two reasons for this:
Firstly, Jupyter notebook is not compatible with videos. You can easily view animations created by matplotlib using the %matplotlib notebook command. However, some users can’t use this command. From my tests, people using Linux or Google colab cannot view videos in this way. We intend to introduce a method in the tutorial notebook that allows such users to easily view videos.
Secondly, handling the axes object is challenging. If you wanted to add a title after creating a video, you would need to proceed with a code like the following:</p>

<div><video controls="" src="https://github.com/qutip/qutip-tutorials/assets/72233550/9df92d07-7b52-49ed-9dfc-f77effe36805" muted="false"></video></div>

<p>For those unfamiliar with matplotlib, this is too complicated.
By creating a tutorial notebook, I want to help users maximize the potential of QuTiP.</p>]]></content><author><name></name></author><summary type="html"><![CDATA[Making animation functions useful]]></summary></entry><entry><title type="html">Fifth post</title><link href="http://localhost:4000/2023/07/31/fifth-post.html" rel="alternate" type="text/html" title="Fifth post" /><published>2023-07-31T00:00:00+09:00</published><updated>2023-07-31T00:00:00+09:00</updated><id>http://localhost:4000/2023/07/31/fifth%20post</id><content type="html" xml:base="http://localhost:4000/2023/07/31/fifth-post.html"><![CDATA[<h1 id="adding-animation-functions">Adding animation functions</h1>
<p>In quantum mechanics, time evolution is an important topic. QuTiP provides many functions to easily calculate it. However, until now, QuTiP did not have any functions to visualize this.
To make it more useful for users, I have been creating many animation functions. I will first explain the implementation, then present a simple simulation.</p>

<p>Matplotlib offers two tools for animations: ArtistAnimation and FuncAnimation. While FuncAnimation can create animations faster, its implementation is a bit complicated, so I have used ArtistAnimation this time. However, quantum mechanics simulations often involve large matrices, and these can consume a lot of PC memory. This can cause ArtistAnimation to run quite slowly, so I am considering refactoring.</p>

<p>I will now explain the current implementation. ArtistAnimation creates all the animation frames that you want to draw first. Here, ArtistAnimation receives a list of artist objects as an array and draws each list for each frame. Let’s look at an example. The code below is a part of the anim_sphereplot code. As we can see from the official document, plot_surface returns Poly3DCollection, which overrides the Artist class. This code stores this object in an array and adds it to the artist_list to draw it.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>def anim_sphereplot ...
.
.
# plot with facecolors set to cm.jet colormap normalized to nrm
artist_list = list()
for r, ph in r_and_ph:
    artist = [ax.plot_surface(r * xx, r * yy, r * zz, rstride=1, cstride=1,
                                facecolors=cmap(norm(ph)), linewidth=0,)]
    artist_list.append(artist)
.
</code></pre></div></div>

<p>By doing so, the axes retain settings such as title and xlim, while only the plot is changed.</p>

<p>Next, I will explain about save_options. The Jupyter notebook is a great environment for running Python code. However, it often doesn’t work well when you draw animations. Therefore, we convert the mp4 file of the animation to an html video. By doing so, you can check the animation on the spot, as shown in the image below. save_options allows you to set the file name and set the writer when creating the mp4 file.</p>

<p>Let’s look at an example. Suppose we consider the time evolution of the Pauli operator σ_x, with the Hamiltonian as the Pauli matrix σ_y. By using anim_matrix_histogram, we can check the components of the Pauli operator.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>from qutip import ket, sigmaz, tensor, qeye, mesolve
import qutip as qt
import numpy as np
# Hamiltonian
H = qt.sigmay().unit()

# initial state
psi0 = qt.sigmax().unit()

# list of times for which the solver should store the state vector
tlist = np.linspace(0, 2*np.pi, 50)

results = mesolve(H, psi0, tlist, [], [])

fig, ani, html = qt.anim_matrix_histogram(results.states, save_options={'name': 'real'})
html

fig, ani, html = qt.anim_matrix_histogram(results.states, bar_style='img',
                                          color_style='img', save_options={'name': 'imaginary'})
html
</code></pre></div></div>

<div><video controls="" src="https://github.com/qutip/qutip/assets/72233550/b5a842ef-fcf8-4137-a8dc-7c3efcefdb62" muted="false"></video></div>
<p>The real part of the pauli operator</p>

<div><video controls="" src="https://github.com/qutip/qutip/assets/72233550/45550141-8cdb-4131-9109-b17d0a115826" muted="false"></video></div>
<p>The imaginary part of the pauli operator</p>]]></content><author><name></name></author><summary type="html"><![CDATA[Adding animation functions In quantum mechanics, time evolution is an important topic. QuTiP provides many functions to easily calculate it. However, until now, QuTiP did not have any functions to visualize this. To make it more useful for users, I have been creating many animation functions. I will first explain the implementation, then present a simple simulation.]]></summary></entry><entry><title type="html">Fourth post</title><link href="http://localhost:4000/2023/07/17/fourth-post.html" rel="alternate" type="text/html" title="Fourth post" /><published>2023-07-17T00:00:00+09:00</published><updated>2023-07-17T00:00:00+09:00</updated><id>http://localhost:4000/2023/07/17/fourth%20post</id><content type="html" xml:base="http://localhost:4000/2023/07/17/fourth-post.html"><![CDATA[<h1 id="two-weeks-progress-pr-merging-function-enhancement-and-pytest-introduction">Two Weeks Progress: PR Merging, Function Enhancement, and Pytest Introduction</h1>
<p>Hello, today I will introduce what I’ve accomplished over the past two weeks.</p>

<h2 id="pr-merged">PR merged</h2>
<p>The first PR #2170 was merged into my project. You can see what was added to functions from my previous posts. This will be released in the next version of qutip, so it will not be available if you install qutip using <code class="language-plaintext highlighter-rouge">pip install qutip</code>. To actually use it, you need to execute the following code to download and use it from GitHub.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># uninstall qutip if you installed
pip install git+https://github.com/qutip/qutip.git@master
</code></pre></div></div>

<h2 id="combining-matrix_histogram-and-matrix_histogram_complex">Combining matrix_histogram and matrix_histogram_complex</h2>
<p>I worked on combining matrix_histogram and matrix_histogram_complex, two functions visualize different parts of Qobj’s matrix. Moreover, matrix_histogram provided users with more options. Therefore, I’ve been working hard to consolidate these two functions into one and add new features to enable users to visualize more aspects of the matrix properties.</p>

<p><img width="894" alt="matrix_histogram" src="https://github.com/qutip/qutip/assets/72233550/a4c94bba-06f8-474f-b6cf-88e0385d7d5a" /></p>

<h2 id="adding-pytest">Adding pytest</h2>
<p>I also added pytest. Until now, visualization did not have tests. This made it difficult for maintainers to notice if there were bugs in the functions within visualization.py or if changes in the modules which they uses break them. By introducing pytest, we can quickly notice and fix these issues.</p>

<h2 id="next-work">Next work</h2>
<p>We often want to see the time evolution of a system. ‘'’Quite.solver.Result’’’ class allows us to have the state of such systems. For example, ‘'’plot_expectation_values’’’ is suitable for plotting the expectation values of such systems. However, if the user wants to visualize the time evolution of the density matrix of such a system, they have to create their own animation, although the animation function provided by matplotlib is often difficult to use. I am working on providing a function that allows the user to easily create animations by simply passing the results, while at the same time allowing them to edit the animation settings.</p>]]></content><author><name></name></author><summary type="html"><![CDATA[Two Weeks Progress: PR Merging, Function Enhancement, and Pytest Introduction Hello, today I will introduce what I’ve accomplished over the past two weeks.]]></summary></entry><entry><title type="html">Third post</title><link href="http://localhost:4000/2023/07/02/third-post.html" rel="alternate" type="text/html" title="Third post" /><published>2023-07-02T00:00:00+09:00</published><updated>2023-07-02T00:00:00+09:00</updated><id>http://localhost:4000/2023/07/02/third%20post</id><content type="html" xml:base="http://localhost:4000/2023/07/02/third-post.html"><![CDATA[<h1 id="continue-working-on-visualizationpy">Continue working on visualization.py</h1>
<p>Over the past two weeks, I have continued working on my previous task and improved it further.</p>

<h2 id="apply-colorblind_safe-more">Apply colorblind_safe more</h2>
<p>In my previous work, I applied colorblind_safe to some functions. I have extended this to many more functions. However, in the previous changes, I did not choose colormaps based on what the user wants to visualize. For example, if you are interested in the variation of values, it is better to use a sequential colormap, whereas if the focus is on whether values take certain values, a diverging colormap is more suitable. I have modified each function to use suitable colors. Please take a look at the following examples: hinton and sphereplot.</p>

<p><img src="https://github.com/qutip/qutip/assets/72233550/c92c7f5a-939f-4a61-a6ef-0098094ac836" width="400px" /><br />
hinton, colorblind_safe = False<br />
<img src="https://github.com/qutip/qutip/assets/72233550/e9e6bb0e-487d-4ccf-9c0e-f74f35c5283b" width="400px" /><br />
hinton, colorblind_safe = True<br />
<img src="https://github.com/qutip/qutip/assets/72233550/76cad290-1211-454a-865e-cd6561de61bd" width="400px" /><br />
sphere_plot, colorblind_safe = True<br />
<img src="https://github.com/qutip/qutip/assets/72233550/ab147971-d5f3-4cc4-b875-afede25644b2" width="400px" /><br />
sphare_plot, colorblind_safe = True</p>

<h2 id="prepare-for-the-first-evaluation">Prepare for the first evaluation</h2>
<p>The first evaluation for GSoC is coming. Therefore, in addition to making the code mergeable, I have also updated the documentation. I am excited to see it being merged and used by everyone. If you have any ideas to make it even better, let’s contribute to QuTiP.</p>]]></content><author><name></name></author><summary type="html"><![CDATA[Continue working on visualization.py Over the past two weeks, I have continued working on my previous task and improved it further.]]></summary></entry><entry><title type="html">Second post</title><link href="http://localhost:4000/2023/06/19/second-post.html" rel="alternate" type="text/html" title="Second post" /><published>2023-06-19T00:00:00+09:00</published><updated>2023-06-19T00:00:00+09:00</updated><id>http://localhost:4000/2023/06/19/second%20post</id><content type="html" xml:base="http://localhost:4000/2023/06/19/second-post.html"><![CDATA[<h1 id="aplly-colorblind_safe-and-arrange-arguments">Aplly colorblind_safe and arrange arguments</h1>
<p>Hello. Today, I will introduce what I have been working on for the past two weeks.</p>

<h2 id="colorblind-safe">colorblind safe</h2>
<p>Firstly, it is about color settings. Previously, even when ‘qutip.settings.colorblind_safe=True,’ most functions did not have the capability to change colors. So, I have been modifying the functions to support this. You can see actual usage examples <a href="https://drive.google.com/file/d/1LSNLWW2FBhX4PeMXJTxSN6Qgb-G6_TXn/view">here</a>. By simply setting ‘colorblind_safe=True,’ you can see that the colors are automatically changed.</p>

<p><img src="https://github.com/tamakoshi2001/tamakoshi2001.github.io/assets/72233550/f30373b4-4b6e-4e3b-a4a1-e51ea547cdda" width="300px" /><br />
colorblind_safe = False</p>

<p><img src="https://github.com/tamakoshi2001/tamakoshi2001.github.io/assets/72233550/e5c1237a-b4b0-4c3c-a9a6-67e1ed66ed7c" width="300px" /><br />
colorblind_safe = True</p>

<h2 id="change-arguments">change arguments</h2>
<p>Next, I have been changing the variables in the functions. The issue with the previous functions can be seen by comparing the following two functions:</p>

<ol>
  <li>hinton
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>def hinton(rho, xlabels=None, ylabels=None, title=None, ax=None, cmap=None,
        label_top=True, color_style="scaled"):
 """Draws a Hinton diagram for visualizing a density matrix or superoperator.
...
</code></pre></div>    </div>
  </li>
  <li>plot_wigner_sphere
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>def plot_wigner_sphere(fig, ax, wigner, reflections):
 """Plots a coloured Bloch sphere.
...
</code></pre></div>    </div>
  </li>
</ol>

<p>By comparing these two functions, you can see the following: The first is that the order of arguments is different between the functions. The second is that there are arguments, such as ‘title,’ that are included in one but not the other. I am currently fixing this. Specifically, I am making the following modifications:</p>

<p>The variables are arranged in the order of mandatory variables specific to the function, optional variables specific to the function, and variables that are common to many functions. Additionally, I am removing arguments like ‘title’ that can be set later by the user. Here is the example of my change;</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>def hinton(rho, color_style="scaled", label_top=True, *,
           xticklabels=None, yticklabels=None, cmap=None, colorbar=True,
           figure=None, axes=None):
    """Draws a Hinton diagram for visualizing a density matrix or superoperator.
...
</code></pre></div></div>

<p>With these changes, I am confident that users will be able to use the functions consistently.</p>

<p>Currently, I am applying these modifications to as many functions as possible. I will inform you about the results in the next post.”</p>]]></content><author><name></name></author><summary type="html"><![CDATA[Aplly colorblind_safe and arrange arguments Hello. Today, I will introduce what I have been working on for the past two weeks.]]></summary></entry><entry><title type="html">First post</title><link href="http://localhost:4000/2023/06/06/first-post.html" rel="alternate" type="text/html" title="First post" /><published>2023-06-06T00:00:00+09:00</published><updated>2023-06-06T00:00:00+09:00</updated><id>http://localhost:4000/2023/06/06/first%20post</id><content type="html" xml:base="http://localhost:4000/2023/06/06/first-post.html"><![CDATA[<h1 id="first-blog-of-my-contributions-to-qutip">First blog of my contributions to QuTiP</h1>
<p>Hi. My name is Yuji Tamakoshi. For the next three months, I will be updating my blog with my contributions to the Google Summer of Code (GSoC) project. I hope my blog will be helpful to someone in the near future!</p>

<h2 id="what-is-qutip">What is QuTiP?</h2>
<p>According to QuTiP website, QuTiP is an open-source software for simulating the dynamics of open quantum systems [1]. If you are interested in QuTiP after reading this blog, please check out the tutorials on the website and try them out on Google Colaboratory. Let’s experience the wonders and fascination of quantum systems together!</p>

<h2 id="overview-of-my-project">Overview of my project</h2>
<p>I will be focusing on improving the visualization capabilities of QuTiP. Visualization, such as graphs and animations, often helps people understand things better, and the same applies to understanding quantum mechanics.
The outline of my project is as follows: 
QuTiP already has several visualization functions, but they can sometimes be unfriendly to users due to unchangeable colors and disorganized arguments. This project aims to enhance these functions by unifying their interfaces and adding colorblind options. Additionally, I will develop an animation function for the evolution of quantum states. The final deliverables will include unified interfaces for plot functions with colorblind support, animation functions for the Result object, as well as pytests and documentation for all of these features.
You can find more details about <a href="https://docs.google.com/document/d/1s66NPwtaFdaMp8p8nJi1qxfbzxhZyDW6Z6_aodu4sjw/edit?usp=sharing">my project</a> here.</p>

<h2 id="what-is-next">What is next?</h2>
<p>Currently, I am working on introducing a new class to make QuTiP more colorblind-friendly, and selecting function arguments to make them more intuitive for beginners. I will write them in my next blog post.</p>

<p>You can follow my current activities through <a href="https://github.com/qutip/qutip/pull/2170">this link</a>, and <a href="https://github.com/qutip/qutip/pull/2113">PR-2113</a> and <a href="https://github.com/qutip/qutip/pull/2120">PR-2120</a> are my contributions to QuTiP. If you are interested in contribution. See <a href="https://qutip.org/docs/latest/development/contributing.html">this</a> and try!</p>

<p>[1] https://qutip.org/</p>]]></content><author><name></name></author><summary type="html"><![CDATA[First blog of my contributions to QuTiP Hi. My name is Yuji Tamakoshi. For the next three months, I will be updating my blog with my contributions to the Google Summer of Code (GSoC) project. I hope my blog will be helpful to someone in the near future!]]></summary></entry></feed>